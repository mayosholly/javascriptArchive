How to write a function in JavaScript ?
A JavaScript function is a collection of reusable code that may be invoked from anywhere in your application. This avoids the need to write the same code again and over. It aids programmers in the creation of modular code. Functions enable a programmer to break down a large program into several smaller and more manageable functions.

Functions are one of JavaScript’s core building elements. In JavaScript, a function is comparable to a procedure—a series of words that performs a task or calculates a value—but for a process to qualify as a function, it must accept some input and produce an output with a clear link between the input and the result. To utilize a function, it must be defined in some place within the scope from which it will be called.

Function Definition: A function definition or function statement starts with the function keyword and continues with the following.

Function’s name.
A list of function arguments contained in parenthesis and separated by commas.
Statements are enclosed in curly brackets.
Syntax:

function name(arguments)
{
   javascript statements
}
Function Calling: To call a function at a later point in the script, simply type the function’s name. By default, all JavaScript functions can utilize argument objects. Each parameter’s value is stored in an arguments object. The argument object is similar to an array. Its values may be accessed using an index, much like an array. It does not, however, provide array methods.  

Function Arguments: A function can contain one or more arguments that are sent by the calling code and can be utilized within the function. Because JavaScript is a dynamically typed programming language, a function argument can have any data type as a value.


Return Value: A return statement is an optional part of a JavaScript function. If you wish to return a value from a function, you must do this. This should be the final statement of a function.

Function Expression: We may assign a function to a variable and then utilize that variable as a function in JavaScript. It is known as a function expression.

Types Of Functions in Javascript:

1. Named function: A named function is one that we write in code and then use whenever we need it by referencing its name and providing it with some parameters. Named functions come in handy when we need to call a function several times to give various values to it or run it multiple times.

2. Anonymous function: We can define a function in JavaScript without giving it a name. This nameless function is referred to as the anonymous function. A variable must be assigned to an anonymous function.


3. Nested Functions: A function in JavaScript can contain one or more inner functions. These nested functions fall within the purview of the outer function. The inner function has access to the variables and arguments of the outer function. However, variables declared within inner functions cannot be accessed by outer functions.

4. Immediately invoked function expression: The browser executes the invoked function expression as soon as it detects it. This function has the advantage of running instantly where it is situated in the code and producing direct output. That is, it is unaffected by code that occurs later in the script and can be beneficial.